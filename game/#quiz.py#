
import operator
import random

ops = { "+":operator.add, "-":operator.sub, "*":operator.mul, "/":operator.floordiv}

class Question(object):
    def __init__(self, d, q):
        self.stuff = []
        self.questiontype = q
        self.difficulty = d
        self.answer = 0
        self.youranswer = 0
        self.question = ""

    def getAnswer(self):
        pass

    def chkAnswer(self):
        return self.answer == self.youranswer

    def closeness(self):
        return self.youranswer/self.answer

#Arithmetics
#Take Difficulty level(possibly an integer)
#and Question Type, of 'maximize', 'quiz', or 'match'
class Arith(Question):
    def __init__(self, d, q):
        super(Arith, self).__init__(d,1)
        self.stuff = [ random.randrange(100), random.randrange(100), random.randrange(100) ]
        self.randops = random.sample(ops, 2)
               self.answer = eval("self." + q + "()") 
    def getAnswer(self):
        if self.questiontype == "maximize":
            self.answer = self.maximize()
        elif self.questiontype == "quiz":
            self.answer = self.quiz()
        elif self.questiontype == "match":
            self.answer = self.match()

    def quiz(self):
        
        pass

    def maximize(self):
        maxlist = []
        for i in range(len(self.stuff)):
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[0] + str(self.stuff[(i+1)%3]) + self.randops[1] + str(self.stuff[(i+2)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[0] + str(self.stuff[(i+2)%3]) + self.randops[1] + str(self.stuff[(i+1)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[1] + str(self.stuff[(i+1)%3]) + self.randops[0] + str(self.stuff[(i+2)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[1] + str(self.stuff[(i+2)%3]) + self.randops[0] + str(self.stuff[(i+1)%3])))
        return max(maxlist)

    def match(self):
        pass


#Decimal Arithmetics.
#Takes Difficulty level(possibly an integer)
#and Question Type, of 'maximize', 'quiz', or 'match'
class decArith(Question):
    def __init__(self, d, q):
        super(decArith, self).__init__(d,q)
        self.stuff = [ float(random.randrange(10000))/100.0, float(random.randrange(10000))/100.0, float(random.randrange(10000))/100.0 ]
        self.randops = random.sample(ops, 2)
        self.answer = eval("self." + q + "()")

    def quiz(self):
        
        pass

    def maximize(self):
        maxlist = []
        for i in range(len(self.stuff)):
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[0] + str(self.stuff[(i+1)%3]) + self.randops[1] + str(self.stuff[(i+2)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[0] + str(self.stuff[(i+2)%3]) + self.randops[1] + str(self.stuff[(i+1)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[1] + str(self.stuff[(i+1)%3]) + self.randops[0] + str(self.stuff[(i+2)%3])))
            maxlist.append(eval(str(self.stuff[i%3]) + self.randops[1] + str(self.stuff[(i+2)%3]) + self.randops[0] + str(self.stuff[(i+1)%3])))
        return max(maxlist)

    def match(self):
        pass

def quiz():
    stuff = [ float(random.randrange(10000))/100.0, float(random.randrange(10000))/100.0, float(random.randrange(10000))/100.0 ]
    randops = random.sample(ops, 2)
    
    print stuff
    print randops

    x = raw_input("Choose first number (0-2):")
    y = raw_input("Choose first operator (0-1):")
    z = raw_input("Choose second number (0-2):")

    rm1 = stuff[int(x)]
    rm2 = stuff[int(z)]
    stuff.remove(rm1)
    stuff.remove(rm2)
    rm3 = randops[int(y)]
    randops.remove(rm3)
    answers = str(rm1) + rm3 + str(rm2) + randops[0] + str(stuff[0])
    answer = eval(answers)
    print "Your number: " + answers + ' =  '+ str(answer)

    stuff.append(rm1)
    stuff.append(rm2)
    randops.append(rm3)
    maxlist = []


    print "Possible Maximum Number:" + str(max(maxlist))
